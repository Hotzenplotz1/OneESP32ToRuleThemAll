esphome:
  on_boot:
    priority: -100
    then:
      - lambda: |-
          CallbackHandler::instance().addCallback(std::make_pair(Kessel,Property::kPASSIVKUEHLUNG),[](const SimpleVariant& value){
            const auto stringValue{Mapper::instance().getPassivkuehlung(value).value_or("Unbekannt")};
            const auto index = id(PASSIVKUEHLUNG).index_of(stringValue);
            if(index.has_value()) {
              id(PASSIVKUEHLUNG).publish_state(stringValue);
            }
          });
          queueRequest(Kessel, Property::kPASSIVKUEHLUNG);

          CallbackHandler::instance().addCallback(std::make_pair(Kessel,Property::kZULUFT_SOLL),[](const SimpleVariant& value){
            // workaround for broken ninth bit of BETRIEBSSTATUS
            const auto zuluftSoll = static_cast<std::uint16_t>(value);
            id(LUEFTUNG).publish_state(zuluftSoll > 0U);
          });

#########################################
#                                       #
#   Selects                             #
#                                       #
#########################################
select:
  - platform: template
    name: "PASSIVKUEHLUNG"
    id: PASSIVKUEHLUNG
    options:
      - "Aus"
      - "Ablüften"
      - "Zulüften"
      - "Bypass"
      - "Sommerkassette"
      - "Unbekannt"
    initial_option: "Unbekannt"
    optimistic: true
    setup_priority: 100
    set_action:
      then:
        - lambda: |-
            const auto passivkuehlungId = Mapper::instance().getPassivkuehlungId(x);
            if(passivkuehlungId.has_value()) {
              sendData(Kessel, Property::kPASSIVKUEHLUNG, passivkuehlungId.value());
            }

#########################################
#                                       #
#   Switches                            #
#                                       #
#########################################
switch:
  - platform: template
    name: "KUEHLUNG HK1"
    id: KUEHLUNGHK1
    optimistic: true
    turn_on_action:
      - lambda: |-
          sendData(HK1, Property::kKUEHLMODE, static_cast<std::uint16_t>(true));
    turn_off_action:
      - lambda: |-
          sendData(HK1, Property::kKUEHLMODE, static_cast<std::uint16_t>(false));

#########################################
#                                       #
#   Packages                            #
#                                       #
#########################################
packages:
  WAERMEERTRAG_RUECKGE_SUMME_MWH:  !include { file: wp_generic_combined.yaml, vars: { sensor_name: "WAERMEERTRAG_RUECKGE_SUMME_MWH"     , scaled_property: "WAERMEERTRAG_RUECKGE_SUM_KWH" , property: "WAERMEERTRAG_RUECKGE_SUM_MWH" , unit: "MWh", accuracy_decimals: "3", icon: "mdi:fire"  }}

  ABLUFTTEMP:                     !include { file: wp_temperature.yaml, vars: { property: "ABLUFTTEMP"       }}

  LUEFT_STUFE_TAG:                !include { file: wp_ventilation.yaml, vars: { property: "LUEFT_STUFE_TAG"   }}
  LUEFT_STUFE_NACHT:              !include { file: wp_ventilation.yaml, vars: { property: "LUEFT_STUFE_NACHT" }}
  LUEFT_STUFE_PARTY:              !include { file: wp_ventilation.yaml, vars: { property: "LUEFT_STUFE_PARTY" }}

  ABLUFTFEUCHTE:                  !include { file: wp_generic.yaml, vars: { property: "ABLUFTFEUCHTE"            , interval: $interval_very_slow, unit: "%", icon: "mdi:water-percent"}}
  MOTORSTROM:                     !include { file: wp_generic.yaml, vars: { property: "MOTORSTROM"               , interval: $interval_medium, unit: "A" }}
  MOTORSPANNUNG:                  !include { file: wp_generic.yaml, vars: { property: "MOTORSPANNUNG"            , interval: $interval_medium, unit: "V" }}
  MOTORLEISTUNG:                  !include { file: wp_generic.yaml, vars: { property: "MOTORLEISTUNG"            , interval: $interval_medium, unit: "kW", accuracy_decimals: "2" }}
  HEIZ_KUEHL_LEISTUNG:            !include { file: wp_generic.yaml, vars: { property: "HEIZ_KUEHL_LEISTUNG"      , interval: $interval_medium, unit: "kW", accuracy_decimals: "2" }}
  ABLUFT_IST:                     !include { file: wp_generic.yaml, vars: { property: "ABLUFT_IST"               , interval: $interval_slow  , unit: "Hz"   , icon: "mdi:fan"   }}
  FORTLUFT_IST:                   !include { file: wp_generic.yaml, vars: { property: "FORTLUFT_IST"             , interval: $interval_slow  , unit: "Hz"   , icon: "mdi:fan"   }}
  ZULUFT_IST:                     !include { file: wp_generic.yaml, vars: { property: "ZULUFT_IST"               , interval: $interval_slow  , unit: "Hz"   , icon: "mdi:fan"   }}
  ABLUFT_SOLL:                    !include { file: wp_generic.yaml, vars: { property: "ABLUFT_SOLL"              , interval: $interval_slow  , unit: "l/min", icon: "mdi:pump"  }}
  FORTLUFT_SOLL:                  !include { file: wp_generic.yaml, vars: { property: "FORTLUFT_SOLL"            , interval: $interval_slow  , unit: "l/min", icon: "mdi:pump"  }}
  ZULUFT_SOLL:                    !include { file: wp_generic.yaml, vars: { property: "ZULUFT_SOLL"              , interval: $interval_slow  , unit: "l/min", icon: "mdi:pump"  }}
  VOLUMENSTROM:                   !include { file: wp_generic.yaml, vars: { property: "VOLUMENSTROM"             , interval: $interval_slow  , unit: "l/min", icon: "mdi:pump"  }}
  LAUFZEIT_FILTER:                !include { file: wp_generic.yaml, vars: { property: "LAUFZEIT_FILTER"          , interval: $interval_once_in_a_while , unit: "%", icon: "mdi:calendar"  }}

  NE_STUFE_WW:                    !include { file: wp_number.yaml, vars: { property: "NE_STUFE_WW"                , min: "0", max: "3" }}

  WAERMEERTRAG_RUECKGE_TAG_SUMME_KWH:  !include { file: wp_daily_energy_combined.yaml, vars: { sensor_name: "WAERMEERTRAG_RUECKGE_TAG_SUMME_KWH" , property_wh: "WAERMEERTRAG_RUECKGE_TAG_WH"    , property_kwh: "WAERMEERTRAG_RUECKGE_TAG_KWH"     }}
